name: Android Test

on:
  push:

jobs:
  apple:
    runs-on: macos-latest

    defaults:
      run:
        working-directory: ./app

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Install gems
        run: bundle install
        working-directory: ./app/ios

      - name: Update signing settings
        run: bundle exec fastlane update_signing_settings
        env:
          IOS_APP_IDENTIFIER: ${{ secrets.IOS_APP_IDENTIFIER }}
          IOS_CERT_GIT_REPO: ${{ secrets.IOS_CERT_GIT_REPO }}
          IOS_PROFILE_NAME: ${{ secrets.IOS_PROFILE_NAME }}
          IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        # KEYSTORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
        # STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        # KEY_ALIAS: ${{ secrets.KEY_ALIAS}}
        # KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        # ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
        working-directory: ./app/ios

      - name: Get iOS certs
        run: bundle exec fastlane get_ios_certs
        working-directory: ./app/ios

      - name: Build App
        # run: flutter build ios --release --no-codesign
        run: flutter build ipa --release

      # - name: Run tests
      #   uses: maierj/fastlane-action@v2.2.1
      #   with:
      #     lane: test
      #     subdirectory: ios

      # - name: Decode Service Account Key JSON File
      #   uses: timheuer/base64-to-file@v1
      #   id: service_account_json_file
      #   with:
      #     fileName: "serviceAccount.json"
      #     encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      # - name: Decode Keystore File
      #   uses: timheuer/base64-to-file@v1
      #   id: android_keystore
      #   with:
      #     fileName: "android_keystore.keystore"
      #     encodedString: ${{ secrets.KEYSTORE_FILE }}

      # - name: Define version code with offset
      #   env:
      #     RUN_NUMBER: ${{ github.run_number }}
      #     INITIAL_VERSION_CODE: 73
      #   run: |
      #     VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
      #     echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

      # - name: Update version code
      #   uses: chkfung/android-version-actions@v1.1
      #   with:
      #     gradlePath: android/app/build.gradle
      #     versionCode: ${{ env.version_code }}

      - name: Deploy iOS release
        run: bundle exec fastlane release
        env:
          IOS_APP_IDENTIFIER: ${{ secrets.IOS_APP_IDENTIFIER }}
          IOS_CERT_GIT_REPO: ${{ secrets.IOS_CERT_GIT_REPO }}
          IOS_PROFILE_NAME: ${{ secrets.IOS_PROFILE_NAME }}
          IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        # KEYSTORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
        # STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        # KEY_ALIAS: ${{ secrets.KEY_ALIAS}}
        # KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        # ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
        working-directory: ./app/ios

      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: assets
      #     path: |
      #       ${{ github.workspace }}/app/build/outputs/bundle/release
