name: Docker Image CI

on:
  release:
    types: [published]

jobs:
  android:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app

    steps:
      - uses: actions/checkout@v3

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          filename: "android_keystore.keystore"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - uses: subosito/flutter-action@v2

      - name: Build App
        run: flutter build appbundle
        env:
          KEYSTORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
          STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Install gems
        run: bundle install
        working-directory: ./app/android

      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1
        id: service_account_json_file
        with:
          fileName: "serviceAccount.json"
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      - name: Deploy Android release
        run: bundle exec fastlane deploy
        env:
          ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
        working-directory: ./app/android

  ios:
    runs-on: macos-latest

    defaults:
      run:
        working-directory: ./app

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Install gems
        run: bundle install
        working-directory: ./app/ios

      - name: Update signing settings
        run: bundle exec fastlane update_signing_settings
        env:
          IOS_APP_IDENTIFIER: ${{ secrets.IOS_APP_IDENTIFIER }}
          IOS_PROFILE_NAME: ${{ secrets.IOS_PROFILE_NAME }}
          IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
        working-directory: ./app/ios

      - name: Get iOS certs
        run: bundle exec fastlane get_ios_certs
        env:
          IOS_APP_IDENTIFIER: ${{ secrets.IOS_APP_IDENTIFIER }} # remove in future to see if we need
          IOS_CERT_GIT_REPO: ${{ secrets.IOS_CERT_GIT_REPO }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

        working-directory: ./app/ios

      - name: Build App
        run: flutter build ipa --release

      - name: Decode App Store api key file
        uses: timheuer/base64-to-file@v1
        id: app_store_connect_api_key
        with:
          filename: "api-key.json"
          encodedString: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - name: Update reviewer email address
        uses: DamianReeves/write-file-action@v1
        with:
          path: ${{ GITHUB_WORKSPACE }}/ios/fastlane/metadata/review_information/email_address.txt
          write-mode: overwrite
          content: ${{ secrets.REVIEWER_EMAIL_ADDRESS }}

      - name: Update reviewer first name
        uses: DamianReeves/write-file-action@v1
        with:
          path: ${{ GITHUB_WORKSPACE }}/ios/fastlane/metadata/review_information/first_name.txt
          write-mode: overwrite
          content: ${{ secrets.REVIEWER_FIRST_NAME }}

      - name: Update reviewer last name
        uses: DamianReeves/write-file-action@v1
        with:
          path: ${{ GITHUB_WORKSPACE }}/ios/fastlane/metadata/review_information/last_name.txt
          write-mode: overwrite
          content: ${{ secrets.REVIEWER_LAST_NAME }}

      - name: Update reviewer contact number
        uses: DamianReeves/write-file-action@v1
        with:
          path: ${{ GITHUB_WORKSPACE }}/ios/fastlane/metadata/review_information/phone_number.txt
          write-mode: overwrite
          content: ${{ secrets.REVIEWER_PHONE_NUMBER }}

      - name: Deploy iOS release
        run: bundle exec fastlane release
        env:
          API_KEY_PATH: ${{ steps.app_store_connect_api_key.outputs.filePath}}
        working-directory: ./app/ios

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: michaelgambold/pi-garage

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./service
          platforms: linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
